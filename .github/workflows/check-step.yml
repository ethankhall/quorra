name: Check

on:
  workflow_call:

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            vendor/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('.github/cache-version') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
              ${{ runner.os }}-cargo-release-${{ hashFiles('.github/cache-version') }}-
      - name: Run tests
        run: cargo test
  formatting:
    name: Run Formatting
    runs-on: ubuntu-latest
    steps:
      - name: install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            vendor/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('.github/cache-version') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
              ${{ runner.os }}-cargo-release-${{ hashFiles('.github/cache-version') }}-
      - name: 'cargo fmt'
        run: cargo fmt --check
      - name: 'cargo clippy'
        run: cargo clippy
  # dependencies:
  #   name: Run Dependency Check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: install deps
  #       run: |
  #         apt-get update
  #         apt-get install -y protobuf-compiler
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: install
  #         args: cargo-udeps
  #         toolchain: nightly
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: udeps
  #         toolchain: nightly