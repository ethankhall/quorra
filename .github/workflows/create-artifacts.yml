name: Publish Image

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      registry:
        required: true
        type: string

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry }}
          tags: |
            type=raw,value=${{ inputs.version }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      - uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/cargo@v1
        with:
          command: vendor
      - name: Configure version
        run: |
          docker run --rm -v $(pwd):/target ghcr.io/ethankhall/crom/cli:latest write-version custom ${{ inputs.version }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/ethankhall/quorra-cache
          name: Publish Image

  build-for-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            vendor/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('.github/cache-version') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
              ${{ runner.os }}-cargo-release-${{ hashFiles('.github/cache-version') }}-
      - name: Install Dependencies
        run: |
          brew install protobuf
      - name: Build Artifacts
        run: |
          .github/bin/build-osx.sh ${{ inputs.version }}
      - name: Upload Artifacts
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          tar -C target/artifacts -cvzf target/artifacts/quorra-macos.tgz quorra
          gh release upload ${{ inputs.version }} target/artifacts/quorra-macos.tgz

  build-for-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            vendor/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('.github/cache-version') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
              ${{ runner.os }}-cargo-release-${{ hashFiles('.github/cache-version') }}-
      - name: Build Artifacts
        run: |
          .github/bin/build-linux.sh ${{ inputs.version }}
      - name: Upload Artifacts
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          tar -C target/aarch64-apple-darwin/release -cvzf target/artifacts/quorra-linux-aarch64.tgz quorra
          tar -C target/x86_64-apple-darwin/release -cvzf target/artifacts/quorra-linux-amd64.tgz quorra
          gh release upload ${{ inputs.version }} target/artifacts/quorra-linux-aarch64.tgz target/artifacts/quorra-linux-amd64.tgz