on:
  push:
    branches:
    - main

name: Release

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: login to registry
        run: docker login docker.pkg.github.com --username ethankhall --password ${{ secrets.GITHUB_TOKEN }}
      - name: create release
        id: version
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          VERSION=$(docker run --rm -v $(pwd):/target docker.pkg.github.com/ethankhall/crom/cli:latest get next-release)
          gh release create $VERSION --generate-notes --target $(git rev-parse HEAD) --draft
          echo "version=$VERSION" >> $GITHUB_OUTPUT
  publish:
    uses: ./.github/workflows/create-artifacts.yml
    needs: create-release
    with:
      version: ${{ needs.create-release.outputs.version }}
      registry: ghcr.io/ethankhall/quorra

  remove-draft:
    runs-on: ubuntu-latest
    needs:
      - create-release
      - publish
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: undraft release
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh release edit ${{ needs.create-release.outputs.version }} --draft=false

  tag-latest:
    runs-on: ubuntu-latest
    needs:
      - create-release
      - remove-draft
    steps:
      - name: Update latest tag
        run: |
          set -e
          docker login ghcr.io --username ethankhall --password ${{ secrets.GITHUB_TOKEN }}
          docker pull ghcr.io/ethankhall/quorra:${{ needs.create-release.outputs.version }}
          docker tag ghcr.io/ethankhall/quorra:${{ needs.create-release.outputs.version }} ghcr.io/ethankhall/quorra:latest
          docker push ghcr.io/ethankhall/quorra:latest

  check:
    uses: ./.github/workflows/check-step.yml